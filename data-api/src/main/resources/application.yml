spring:
  application:
    name: spring-boot-demo
  profiles:
    active: dev #默认为开发环境
  servlet:
    multipart:
      enabled: true #开启文件上传
      max-file-size: 10MB #限制文件上传大小为10M
  banner:
    charset: UTF-8
    location: classpath:banner.txt
  #全局懒加载 解决循环依赖，不建议这种方式，建议用@Lazy注解
#  main:
#    lazy-initialization: true
  #MQ消息队列
  rabbitmq:
    # 消息确认（ACK）
    publisher-confirm-type: correlated #确认消息已发送到交换机(Exchange)
    publisher-returns: true #确认消息已发送到队列(Queue)
    listener: #加了2下面2个属性,消费消息的时候,就必须发送ack确认,不然消息永远还在队列中
      direct:
        acknowledge-mode: manual
      simple:
        acknowledge-mode: manual
  mail:
    host: smtp.qq.com # 配置 smtp 服务器地址
    port: 465 # smtp 服务器的端口 http 25   https 465
    username: 571761747@qq.com # 配置邮箱用户名(你的邮箱地址)
    password: bdwwvqznzgepbcgg # 配置申请到的授权码(刚让复制的授权码)
    default-encoding: UTF-8 # 配置邮件编码
    #开启ssl加密规则
    properties:
      mail:
        smtp:
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
          ssl:
            enable: true
          socketFactoryClass: javax.net.ssl.SSLSocketFactory
        debug: true

mybatis-plus:
  mapper-locations: classpath:/mapper/**/*.xml
  # 自定义的mybatis typeHandler的包扫描路径
  type-handlers-package: com.youjun.api.typehandler
  global-config:
    db-config:
      # 主键类型 0: 数据库自增 1 用户输入ID 2 全局唯一ID（数字类型唯一ID） 3 全局唯一ID UUID
      id-type: auto
      # 字段策略 0 忽略判断 1 非 null判断 2 非空判断 默认not_null
      #insert-strategy: not_null
      #update-strategy: not_null
      #select-strategy: not_null
      # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置 @TableLogic注解)
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    #默认是PARTIAL，只会自动映射没有定义嵌套结果集映射的结果集,FULL 会自动映射任意复杂的结果集（包括嵌套其他情况），NONE 取消自动映射
    auto-mapping-behavior: partial
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true

jwt:
  tokenHeader: Authorization #JWT存储的请求头
  secret: spring-boot-demo-secret #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24*7)
  tokenHead: 'Bearer '  #JWT负载中拿到开头

redis:
  database: spring-boot-demo
  key:
    admin: 'ums:admin'
    resourceList: 'ums:resourceList'
  expire:
    common: 86400 # 24小时

secure:
  ignore:
    urls: #安全路径白名单
      - /swagger-ui/index.html
      - /swagger-ui/**
      - /swagger-resources/**
      - /swagger/**
      - /**/v3/api-docs
      - /webjars/springfox-swagger-ui/**  #knife4j 需要改成  /webjars/**
      - /**/*.js
      - /**/*.css
      - /**/*.png
      - /**/*.ico
      - /actuator/**
      - /druid/**
      - /admin/login
      - /admin/register
      - /admin/info
      - /admin/logout
      - /minio/upload
      - /Test/**
      - /office/**  #office测试
#      - /**/**  #测试 开放所有端口

aliyun:
  enabled: false
  oss:
    endpoint: oss-cn-hangzhou.aliyuncs.com # oss对外服务的访问域名
    accessKeyId: XXXX # 访问身份验证中用到用户标识
    accessKeySecret: XXXX # 用户用于加密签名字符串和oss用来验证签名字符串的密钥
    bucketName: kirk-hz-dev # oss的存储空间
    policy:
      expire: 300 # 签名有效期(S)
    maxSize: 10 # 上传文件大小(M)
    callback: http://1.117.230.132:8080/aliyun/oss/callback # 文件上传成功后的回调地址
    dir:
      prefix: spring-boot-demo/ # 上传文件夹路径前缀

minio:
  endpoint: http://192.168.3.101:9090 #MinIO服务所在地址
  bucketName: mall #存储桶名称
  accessKey: minioadmin #访问的key
  secretKey: minioadmin #访问的秘钥
